#!/usr/bin/env ruby

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# Find the sum of all the even-valued terms in the sequence which do not
# exceed four million.

upper_bound = ARGV[0].to_i

fibs = {0 => 0, 1 => 1}

(2..upper_bound).each {|n| fibs[n] = fibs[(n - 1)] + fibs[(n - 2)]}

fibs.keys.each {|k| puts "fibs[#{k}] = #{fibs[k]}"}
result = 0
fibs.keys.each {|k| result += fibs[k] if k % 2 == 0}

puts "#{result}"
